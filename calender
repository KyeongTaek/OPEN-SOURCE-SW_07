#include "학습프로그램.h"

int startday(int year)
{

    int startday;
    startday = (((year - 1)) + ((year - 1) / 4) - ((year - 1) / 100) + ((year) / 400) + 1) % 7;
    return startday;
}

void calender()
{
    FILE* fpaddsche;
    while (1)
    {
        system("cls");
        int selectopt, selectopt2, selectopt3, year, curmon, month, day, goweekend = 0, start, i = 0, j = 0, data[MAX] = { 0 }, tmp, k = 2, fry[MAX], frm[MAX], frd[MAX], times = 0, print = 0;
        char date[MAX], savef[MAX], frs[MAX][MAX];
        time_t timer = 0;
        struct tm t;
        timer = time(NULL);
        localtime_s(&t, &timer);
        달력선택창();
        scanf_s("%d", &selectopt);
        system("cls");
        while (selectopt == 1)
        {
            k = 1;
            달력년도(t.tm_year + 1900);
            scanf_s("%d", &selectopt2);
            system("cls");
            if (selectopt2 == 1)
            {
                year = t.tm_year + 1900;
                curmon = t.tm_mon + 1;
            }
            else if (selectopt2 == 2)
            {
                달력년도2();
                scanf_s("%d", &year);
                system("cls");
                달력달2();
                scanf_s("%d", &curmon);
                system("cls");
            }
            else
            {
                break;
            }
            system("cls");

            const char* months[] = { "1월", "2월", "3월", "4월", "5월", "6월", "7월", "8월", "9월", "10월", "11월", "12월" };
            int monthday[] = { 31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31 };
            if ((year % 4 == 0 && year % 100 != 0) || year % 400 == 0)
            {
                monthday[1] = 29;
            }
            start = startday(year);
            for (month = 1; month < curmon; month++)
            {
                start = (start + monthday[i]) % 7;
                i++;
            }
            fopen_s(&fpaddsche, "addschedule.txt", "r");
            if (fpaddsche != NULL)
            {
                i = 0;
                while (fscanf_s(fpaddsche, "%d %d %d %s", &fry[i], &frm[i], &frd[i], frs[i], MAX) != EOF)
                {
                    i++;
                    times++;
                }
            }
            if (fpaddsche != NULL)
            {
                fclose(fpaddsche);
            }
            printf("\n\n---------------------------------%s-------------------------------------\n", months[curmon - 1]);
            printf("\n일          월          화          수           목          금          토\n\n");

            for (goweekend = 0; goweekend < start; goweekend++)
            {
                printf("            ");
            }

            for (day = 1; day <= monthday[curmon - 1]; day++)
            {
                print = 0;
                for (i = 0; i < times; i++)
                {
                    if (year == fry[i] && month == frm[i] && day == frd[i])
                    {
                        print = 1;
                    }
                }
                if (print == 1)
                {
                    printf("%2d■        ", day);
                }
                else
                {
                    printf("%2d□        ", day);
                }
                goweekend++;
                if (goweekend == 7)
                {
                    goweekend = 0;
                    printf("\n\n");
                }
            }
            printf("\n\n");
            printf("저장된 데이터가 있으면 ■, 저장된 데이터가 없으면 □\n");
            system("pause");
            달력보고선택();
            scanf_s("%d", &selectopt3);
            system("cls");
            if (selectopt3 == 1)
            {
                system("cls");
                selectopt = 2;
                break;

            }
            else if (selectopt3 == 2)
            {
                selectopt = 1;
            }
            else
            {
                break;
            }
        }
        while (selectopt == 2)
        {
            if (k == 2)
            {
                while (1)
                {
                    달력저장확인();
                    scanf_s("%s", date, MAX);
                    if (date == 0)
                    {
                        break;
                    }
                    tmp = 0;
                    for (i = 0; i < 4; i++)
                    {
                        tmp = tmp * 10 + (int)(date[i] - 48);
                    }
                    year = tmp;
                    tmp = 0;
                    for (i = 5; i < 7; i++)
                    {
                        tmp = tmp * 10 + (int)(date[i] - 48);
                    }
                    month = tmp;
                    tmp = 0;
                    for (i = 8; i < 10; i++)
                    {
                        tmp = tmp * 10 + (int)(date[i] - 48);
                    }
                    day = tmp;
                    system("cls");
                    if (date[4] != '-' || date[7] != '-' || month > 12 || month < 1 || day>31)
                    {
                        system("cls");
                        continue;
                    }
                    if (date[0] > '2' || date[1] > '0' || date[2] > '2' || date[3] > '6' || date[5] > '1' || date[8] > '3' || date[4] != '-' || date[7] != '-')
                    {
                        system("cls");
                        continue;
                    }
                    else if (month > 12)
                    {
                        system("cls");
                        continue;
                    }
                    else if (month == 1 || month == 3 || month == 5 || month == 7 || month == 8 || month == 10 || month == 12)
                    {
                        if (day > 31)
                        {
                            system("cls");
                            continue;
                        }
                    }
                    else if (month == 4 || month == 6 || month == 9 || month == 11)
                    {
                        if (day > 30)
                        {
                            system("cls");
                            continue;
                        }
                    }
                    else if (month == 2)
                    {
                        if (day > 28)
                        {
                            system("cls");
                            continue;
                        }
                    }
                    break;
                }

            }
            else if (k == 1)
            {
                while (1)
                {
                    달력저장확인2();
                    scanf_s("%d", &day);
                    if (day == 0)
                    {
                        break;
                    }
                    if (month == 1 || month == 3 || month == 5 || month == 7 || month == 8 || month == 10 || month == 12)
                    {
                        if (day > 31)
                        {
                            system("cls");
                            continue;
                        }
                    }
                    else if (month == 4 || month == 6 || month == 9 || month == 11)
                    {
                        if (day > 30)
                        {
                            system("cls");
                            continue;
                        }
                    }
                    else if (month == 2)
                    {
                        if (day > 28)
                        {
                            system("cls");
                            continue;
                        }
                    }
                    break;
                }
                system("cls");
            }
            if (date == 0 || day == 0)
            {
                break;
            }
            printf("%d년 %d월 %d일", year, month, day);
            for (i = 0; i < times; i++)
            {
                if (year == fry[i] && month == frm[i] && day == frd[i])
                {
                    j++;
                    저장된내용(frs[i], j);
                }
            }
            저장할내용();
            scanf_s("%s", savef, MAX);
            system("cls");
            fopen_s(&fpaddsche, "addschedule.txt", "a");
            if (fpaddsche != NULL)
            {
                if (savef == "exit")
                {
                    printf("기존 화면으로 이동중..");
                    Sleep(700);
                    system("cls");
                    continue;
                }
                else
                {
                    fprintf(fpaddsche, "%d %d %d %s\n", year, month, day, savef);
                    fclose(fpaddsche);
                    저장되었습니다();
                }
            }
            Sleep(700);
            break;
        }
        if (selectopt == 3)
        {
            break;
        }
        break;
    }

}
