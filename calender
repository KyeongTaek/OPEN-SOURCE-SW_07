#include "학습프로그램.h"
FILE* fpaddsche;
int startday(int year)
{

    int startday;
    startday = (((year - 1)) + ((year - 1) / 4) - ((year - 1) / 100) + ((year) / 400) + 1) % 7;
    return startday;
}

int adddate(char date[MAX])
{
    int i = 0,tmp,year,month,day;
    char savef[MAX];
    달력저장날짜();
    scanf_s("%s", date, MAX);
    if (strcmp(date, "exit") == 0)
    {
        return 1;
    }
    while (date)
    {
        if (strcmp(date, "exit") == 0)
        {
            return 1;
        }
        tmp = 0,i=0;
        for (i = 0; i < 4; i++)
        {
            tmp = tmp * 10 + (int)(date[i] - 48);
        }
        year = tmp;
        tmp = 0;
        for (i = 5; i < 7; i++)
        {
            tmp = tmp * 10 + (int)(date[i] - 48);
        }
        month = tmp;
        tmp = 0;
        for (i = 8; i < 10; i++)
        {
            tmp = tmp * 10 + (int)(date[i] - 48);
        }
        day = tmp;
        tmp = 0;
        if (date[0] > '2' || date[1] > '0' || date[2] > '2' || date[3] > '6' || date[5] > '1' || date[8] > '3' || date[4] != '-' || date[7] != '-')
        {
            이상한날짜();
            scanf_s("%s", date, MAX);
            continue;
        }
        else if (month > 12)
        {
            이상한날짜();
            scanf_s("%s", date, MAX);
            continue;
        }
        else if (month == 1 || month == 3 || month == 5 || month == 7 || month == 8 || month == 10 || month == 12)
        {
            if (day > 31)
            {
                이상한날짜();
                scanf_s("%s", date, MAX);
                continue;
            }
        }
        else if (month == 4 || month == 6 || month == 9 || month == 11)
        {
            if (day > 30)
            {
                이상한날짜();
                scanf_s("%s", date, MAX);
                continue;
            }
        }
        else if (month == 2)
        {
            if (day > 28)
            {
                이상한날짜();
                scanf_s("%s", date, MAX);
                continue;
            }
        }
        system("cls");
        저장할내용();
        scanf_s("%s", savef, MAX);
        system("cls");
        fopen_s(&fpaddsche, "addschedule.txt", "a");
        if (fpaddsche != NULL)
        {
            if (strcmp(savef,"exit")== 0)
            {
                printf("기존 화면으로 이동중..");
                Sleep(700);
                system("cls");
                return 1;
            }
            else
            {
                fprintf(fpaddsche, "%d %d %d %s\n", year, month, day, savef);
                fclose(fpaddsche);
                저장되었습니다();
                Sleep(1500);
            }
        }
        break;
    }

    return 1;
}

void calender()
{
    while (1)
    {
        system("cls");
        int selectopt, selectopt2, selectopt3, year, curmon, month, day, goweekend = 0, start, i = 0, j = 0, data[MAX] = { 0 }, k = 2, fry[MAX], frm[MAX], frd[MAX], times = 0, print = 0,tmp;
        char date[MAX], frs[MAX][MAX];
        time_t timer = 0;
        struct tm t;
        timer = time(NULL);
        localtime_s(&t, &timer);
        달력선택창();
        scanf_s("%d", &selectopt);
        system("cls");
        fopen_s(&fpaddsche, "addschedule.txt", "r");
        if (fpaddsche != NULL)
        {
            i = 0;
            while (fscanf_s(fpaddsche, "%d %d %d %s", &fry[i], &frm[i], &frd[i], frs[i], MAX) != EOF)
            {
                i++;
                times++;
            }
        }
        if (fpaddsche != NULL)
        {
            fclose(fpaddsche);
        }
        while (selectopt == 1)
        {
            k = 1;
            달력년도(t.tm_year + 1900,t.tm_mon+1);
            scanf_s("%d", &selectopt2);
            system("cls");
            if (selectopt2 == 1)
            {
                year = t.tm_year + 1900;
                curmon = t.tm_mon + 1;
            }
            else if (selectopt2 == 2)
            {
                달력년도2();
                scanf_s("%d", &year);
                system("cls");
                if(year<200||year>2030)
                {
                    이상한날짜();
                    Sleep(400);
                    break;
                }
                달력달2();
                scanf_s("%d", &curmon);
                system("cls");
                if (curmon < 0 || curmon>12)
                {
                    이상한날짜();
                    Sleep(400);
                    break;
                }
            }
            else
            {
                break;
            }
            system("cls");

            const char* months[] = { "1월", "2월", "3월", "4월", "5월", "6월", "7월", "8월", "9월", "10월", "11월", "12월" };
            int monthday[] = { 31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31 };
            if ((year % 4 == 0 && year % 100 != 0) || year % 400 == 0)
            {
                monthday[1] = 29;
            }
            start = startday(year);
            i = 0;
            for (month = 1; month < curmon; month++)
            {
                start = (start + monthday[i]) % 7;
                i++;
            }
            printf("%d\n", year);
            printf("---------------------------------%s-------------------------------------\n", months[curmon - 1]);
            printf("\n일          월          화          수           목          금          토\n\n");

            for (goweekend = 0; goweekend < start; goweekend++)
            {
                printf("            ");
            }

            for (day = 1; day <= monthday[curmon - 1]; day++)
            {
                print = 0;
                for (i = 0; i < times; i++)
                {
                    if (year == fry[i] && month == frm[i] && day == frd[i])
                    {
                        print = 1;
                    }
                }
                if (print == 1)
                {
                    printf("%2d■        ", day);
                }
                else
                {
                    printf("%2d□        ", day);
                }
                goweekend++;
                if (goweekend == 7)
                {
                    goweekend = 0;
                    printf("\n\n");
                }
            }
            printf("\n\n");
            printf("저장된 데이터가 있으면 ■, 저장된 데이터가 없으면 □\n");
            달력보고선택();
            scanf_s("%d", &selectopt3);
            system("cls");
            if (selectopt3 == 1)
            {
                system("cls");
                selectopt = 2;
            }
            else if (selectopt3 == 2)
            {
                selectopt = 3;
            }
        }

        while (selectopt == 2)
        {
           int result;
           result= adddate(date);
           if (result == 1)
           {
               break;
           }
        }
        if (selectopt == 3)
        {
            system("cls");
            달력확인날짜();
            scanf_s("%s", date, MAX);
            if (strcmp(date, "exit") == 0)
            {
                break;
            }
            while (date)
            {
                tmp = 0, i = 0;
                for (i = 0; i < 4; i++)
                {
                    tmp = tmp * 10 + (int)(date[i] - 48);
                }
                year = tmp;
                tmp = 0;
                for (i = 5; i < 7; i++)
                {
                    tmp = tmp * 10 + (int)(date[i] - 48);
                }
                month = tmp;
                tmp = 0;
                for (i = 8; i < 10; i++)
                {
                    tmp = tmp * 10 + (int)(date[i] - 48);
                }
                day = tmp;
                tmp = 0;
                if (date[0] > '2' || date[1] > '0' || date[2] > '2' || date[3] > '6' || date[5] > '1' || date[8] > '3' || date[4] != '-' || date[7] != '-')
                {
                    이상한날짜();
                    scanf_s("%s", date, MAX);
                    continue;
                }
                else if (month > 12)
                {
                    이상한날짜();
                    scanf_s("%s", date, MAX);
                    continue;
                }
                else if (month == 1 || month == 3 || month == 5 || month == 7 || month == 8 || month == 10 || month == 12)
                {
                    if (day > 31)
                    {
                        이상한날짜();
                        scanf_s("%s", date, MAX);
                        continue;
                    }
                }
                else if (month == 4 || month == 6 || month == 9 || month == 11)
                {
                    if (day > 30)
                    {
                        이상한날짜();
                        scanf_s("%s", date, MAX);
                        continue;
                    }
                }
                else if (month == 2)
                {
                    if (day > 28)
                    {
                        이상한날짜();
                        scanf_s("%s", date, MAX);
                        continue;
                    }
                }
                else
                {
                    break;
                }
                break;
            }
            system("cls");
            for (i = 0; i < times; i++)
            {
                if (year == fry[i] && month == frm[i] && day == frd[i])
                {
                    j++;
                    저장된내용(frs[i], j);
                }
            }
            printf("\n");
            system("pause");
            system("cls");
        }
        else if(selectopt==4)
        {
            break;
        }
    }

}
